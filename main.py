import streamlit as st

# –î–µ—Ä–µ–≤–æ —Ä—ñ—à–µ–Ω—å
decision_tree = {
    "–•–æ—á–µ—à —á–∞–∫–ª—É–≤–∞—Ç–∏ —á–∏ —Ç—Ä–æ—â–∏—Ç–∏ –≤—Å–µ –Ω–∞–≤–∫–æ–ª–æ?": [
        ("–ß–∞–∫–ª—É–≤–∞—Ç–∏", "–¢–∏ —Ä–µ–ª—ñ–≥—ñ–π–Ω–∞ –ª—é–¥–∏–Ω–∞?"),
        ("–ê –º–æ–∂–Ω–∞ —ñ —Ç–µ, —ñ —ñ–Ω—à–µ?", "–ß–∏ –¥–æ–±—Ä–µ —Ç–∏ –ª–∞–¥–Ω–∞—î—à –∑ –ª—é–¥—å–º–∏?"),
        ("–¢—Ä–æ—â–∏—Ç–∏!", "–ë–ª–∏–∂–Ω—ñ–π —á–∏ –¥–∞–ª—å–Ω—ñ–π –±—ñ–π?")
    ],
    "–¢–∏ —Ä–µ–ª—ñ–≥—ñ–π–Ω–∞ –ª—é–¥–∏–Ω–∞?": [
        ("–•–æ—á–µ—à –ø–æ—á—É—Ç–∏ –ø—Ä–æ –º–æ–≥–æ –±–æ–≥–∞?", "–ú–æ–∂–µ, –ø—ñ–∑–Ω—ñ—à–µ..."),
        ("–ù–µ –¥—É–∂–µ", "–¢–∏ –ª—é–±–∏—à –Ω–∞–≤—á–∞–Ω–Ω—è?")
    ],
    "–ú–æ–∂–µ, –ø—ñ–∑–Ω—ñ—à–µ...": [
        ("–û–∫.", "–ñ—Ä–µ—Ü—å")
    ],
    "–¢–∏ –ª—é–±–∏—à –Ω–∞–≤—á–∞–Ω–Ω—è?": [
        ("–ù—ñ. –ù–∞–≤—á–∞–Ω–Ω—è ‚Äî –¥–ª—è —Å–ª–∞–±–∞–∫—ñ–≤", "–¢–∏ –Ω–∞—Ä–æ–¥–∏–ª–∏—Å—è –∑ –º–∞–≥—ñ—î—é?"),
        ("–¢–∞–∫, —è –æ–±–æ–∂–Ω—é—é –≤—á–∏—Ç–∏—Å—è!", "–ß–∏ –º–∞—î—à –º—É–∑–∏—á–Ω–∏–π —Ç–∞–ª–∞–Ω—Ç?")
    ],
    "–¢–∏ –Ω–∞—Ä–æ–¥–∏–ª–∏—Å—è –∑ –º–∞–≥—ñ—î—é?": [
        ("–ù–µ –∑–æ–≤—Å—ñ–º", "–ß–∞–∫–ª—É–Ω"),
        ("–¢–∞–∫, –≤–æ–Ω–∞ —É –º–æ—ó–π –∫—Ä–æ–≤—ñ", "–ß–∞—Ä—ñ–≤–Ω–∏–∫")
    ],
    "–ß–∏ –º–∞—î—à –º—É–∑–∏—á–Ω–∏–π —Ç–∞–ª–∞–Ω—Ç?": [
        ("–ù–µ –¥—É–∂–µ", "–ß–∏ –ª—é–±–∏—à —Ç–≤–∞—Ä–∏–Ω?"),
        ("–¢–∞–∫! –Ø —â–µ –π –ø–æ–µ–∑—ñ—é –ø–∏—à—É", "–ë–∞—Ä–¥")
    ],
    "–ß–∏ –ª—é–±–∏—à —Ç–≤–∞—Ä–∏–Ω?": [
        ("–ú–∞–≥—ñ—á–Ω—ñ —ñ—Å—Ç–æ—Ç–∏ –ø–æ–¥–æ–±–∞—é—Ç—å—Å—è –±—ñ–ª—å—à–µ", "–ú–∞–≥"),
        ("–Ø –Ω–∞–¥–∞—é –ø–µ—Ä–µ–≤–∞–≥—É —Ç–≤–∞—Ä–∏–Ω–∞–º –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –ª—é–¥—è–º", "–î—Ä—É—ó–¥")
    ],
    "–ß–∏ –¥–æ–±—Ä–µ —Ç–∏ –ª–∞–¥–Ω–∞—î—à –∑ –ª—é–¥—å–º–∏?": [
        ("–¢–∞–∫! –õ—é–¥–∏ –∑–∞–∑–≤–∏—á–∞–π –º–µ–Ω–µ –ª—é–±–ª—è—Ç—å", "–¢–∏ –ø—ñ–¥—Å—Ç—É–ø–Ω–∞ –ª—é–¥–∏–Ω–∞?"),
        ("–ù–µ –¥—É–∂–µ", "–ê —Ç–≤–∞—Ä–∏–Ω —Ç–∏ –ª—é–±–∏—à?")
    ],
    "–ê —Ç–≤–∞—Ä–∏–Ω —Ç–∏ –ª—é–±–∏—à?": [
        ("–¢–ê–ö! –í–æ–Ω–∏ —Ç–∞–∫—ñ –ø—É—Ö–Ω–∞—Å—Ç—ñ!", "–î—Ä—É—ó–¥"),
        ("–ï-–µ... –Ω—É —Ç–∞–∫–µ.", "–¢–∏ –ø—ñ–¥—Å—Ç—É–ø–Ω–∞ –ª—é–¥–∏–Ω–∞?")
    ],
    "–¢–∏ –ø—ñ–¥—Å—Ç—É–ø–Ω–∞ –ª—é–¥–∏–Ω–∞?": [
        ("–ù–µ –¥—É–∂–µ", "–ß–∏ –≤—ñ–¥–¥–∞—î—à –ø–µ—Ä–µ–≤–∞–≥—É –∑–∞–∫–ª—è—Ç—Ç—è–º, –∞ –Ω–µ –±–æ—é?"),
        ("–Ø ‚Äî —Å–∞–º–∞ –Ω—ñ—á", "–®–ø–∏–≥—É–Ω")
    ],
    "–ß–∏ –≤—ñ–¥–¥–∞—î—à –ø–µ—Ä–µ–≤–∞–≥—É –∑–∞–∫–ª—è—Ç—Ç—è–º, –∞ –Ω–µ –±–æ—é?": [
        ("–¢–∞–∫. –ë—ñ–π ‚Äî –¥–ª—è —Å–ª–∞–±–∞–∫—ñ–≤", "–ë–∞—Ä–¥"),
        ("–ù—ñ. –ó–∞–∫–ª—è—Ç—Ç—è ‚Äî —Ü–µ –±–æ–Ω—É—Å", "–•–æ—á–µ—à –±—É—Ç–∏ –±–∞–≥–∞—Ç–∏–º–∏?")
    ],
    "–•–æ—á–µ—à –±—É—Ç–∏ –±–∞–≥–∞—Ç–∏–º–∏?": [
        ("–ú–µ–Ω—ñ –±–∞–π–¥—É–∂–µ", "–ß–∏ –∑–Ω–∞—î—à —Ç–∏ –±–æ–π–æ–≤—ñ –º–∏—Å—Ç–µ—Ü—Ç–≤–∞?"),
        ("–¶–µ –ø–∏—Ç–∞–Ω–Ω—è?", "–®–ø–∏–≥—É–Ω")
    ],
    "–ë–ª–∏–∂–Ω—ñ–π —á–∏ –¥–∞–ª—å–Ω—ñ–π –±—ñ–π?": [
        ("–î–∞–ª—å–Ω—ñ–π", "–¢–æ–∂, —á–∏ –¥–æ–±—Ä–µ —Ç–∏ –ª–∞–¥–Ω–∞—î—à –∑ –ª—é–¥—å–º–∏?"),
        ("–ë–ª–∏–∂–Ω—ñ–π", "–ß–∏ –º–∞—î—à —Ç–∏ –ø—Ä–∏—á–∏–Ω—É?")
    ],
    "–¢–æ–∂, —á–∏ –¥–æ–±—Ä–µ —Ç–∏ –ª–∞–¥–Ω–∞—î—à –∑ –ª—é–¥—å–º–∏?": [
        ("–ù—ñ, —è –±—ñ–ª—å—à–µ –ª—é–±–ª—é —Ç–≤–∞—Ä–∏–Ω", "–†–µ–π–Ω–¥–∂–µ—Ä"),
        ("–¢–∞–∫, –ª—é–¥–∏ –∑–∞–∑–≤–∏—á–∞–π –º–µ–Ω–µ –ª—é–±–ª—è—Ç—å", "–¢–∏ –ø–æ—Ç–∞–π–Ω–∞ –ª—é–¥–∏–Ω–∞?")
    ],
    "–ß–∏ –º–∞—î—à —Ç–∏ –ø—Ä–∏—á–∏–Ω—É?": [
        ("–¢–∞–∫, –º–æ—ó –ø–µ—Ä–µ–∫–æ–Ω–∞–Ω–Ω—è –≤–∞–∂–ª–∏–≤—ñ –¥–ª—è –º–µ–Ω–µ", "–ß–∏ –∑–Ω–∞—î—à —Ç–∏ –±–æ–π–æ–≤—ñ –º–∏—Å—Ç–µ—Ü—Ç–≤–∞?"),
        ("–ê –≥—Ä–æ—à—ñ ‚Äî —Ü–µ –ø—Ä–∏—á–∏–Ω–∞?", "–¢–∏ —Ü–∏–≤—ñ–ª—ñ–∑–æ–≤–∞–Ω–∏–π?")
    ],
    "–ß–∏ –∑–Ω–∞—î—à —Ç–∏ –±–æ–π–æ–≤—ñ –º–∏—Å—Ç–µ—Ü—Ç–≤–∞?": [
        ("–ù—ñ", "–ü–∞–ª–∞–¥–∏–Ω"),
        ("–ú–æ—ó –∫—É–ª–∞–∫–∏ –∂–∞–¥–∞—é—Ç—å —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—ñ!", "–ú–æ–Ω–∞—Ö")
    ],
    "–¢–∏ —Ü–∏–≤—ñ–ª—ñ–∑–æ–≤–∞–Ω–∏–π?": [
        ("–Ø –Ω–µ —ó–º –ª—é–¥–µ–π, —è–∫—â–æ —Ç–∏ –ø—Ä–æ —Ü–µ...", "–í–æ—ó–Ω"),
        ("–ù—ñ, —è –≤–∏—Ä–æ—Å–ª–∏ —É –¥–∏–∫—ñ–π –ø—Ä–∏—Ä–æ–¥—ñ", "–í–∞—Ä–≤–∞—Ä")
    ]
}

final_classes = ["–ñ—Ä–µ—Ü—å", "–ß–∞–∫–ª—É–Ω", "–ß–∞—Ä—ñ–≤–Ω–∏–∫", "–ú–∞–≥", "–ë–∞—Ä–¥", "–î—Ä—É—ó–¥",
                 "–®–ø–∏–≥—É–Ω", "–í–æ—ó–Ω", "–í–∞—Ä–≤–∞—Ä", "–†–µ–π–Ω–¥–∂–µ—Ä", "–ü–∞–ª–∞–¥–∏–Ω", "–ú–æ–Ω–∞—Ö"]


if "history" not in st.session_state:
    st.session_state.history = ["–•–æ—á–µ—à —á–∞–∫–ª—É–≤–∞—Ç–∏ —á–∏ —Ç—Ä–æ—â–∏—Ç–∏ –≤—Å–µ –Ω–∞–≤–∫–æ–ª–æ?"]


current_question = st.session_state.history[-1]

st.title("üßô‚Äç‚ôÇÔ∏è –Ø–∫–∏–π –∫–ª–∞—Å D&D —Ç–æ–±—ñ –ø—ñ–¥—ñ–π–¥–µ?")
st.markdown("–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –∫—ñ–ª—å–∫–∞ –ø–∏—Ç–∞–Ω—å, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —Å–≤—ñ–π –∫–ª–∞—Å!")

if current_question in final_classes:
    st.success(f"üéâ –¢–æ–±—ñ —Å–ª—ñ–¥ –≥—Ä–∞—Ç–∏ –∑–∞: **{current_question}**")
    if st.button("–ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É"):
        st.session_state.history = ["–•–æ—á–µ—à —á–∞–∫–ª—É–≤–∞—Ç–∏ —á–∏ —Ç—Ä–æ—â–∏—Ç–∏ –≤—Å–µ –Ω–∞–≤–∫–æ–ª–æ?"]
    st.stop()


st.subheader(current_question)
options = decision_tree.get(current_question, [])

for text, next_step in options:
    if st.button(text):
        st.session_state.history.append(next_step)
        st.experimental_rerun() 
